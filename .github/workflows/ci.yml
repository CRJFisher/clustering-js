name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
      
      - name: Type check
        run: npm run type-check
      
      - name: Run tests
        run: npm test
      
      - name: Build
        run: npm run build:multi
      
      - name: Verify browser build
        run: |
          test -f dist/clustering.browser.js || exit 1
          echo "Browser build size: $(ls -lh dist/clustering.browser.js | awk '{print $5}')"
      
      - name: Verify Node.js build
        run: |
          test -f dist/clustering.node.js || exit 1
          echo "Node.js build size: $(ls -lh dist/clustering.node.js | awk '{print $5}')"
      
      - name: Test Node.js build with tfjs-node
        run: |
          npm install @tensorflow/tfjs-node --no-save
          node -e "const { Clustering } = require('./dist/clustering.node.js'); console.log('Node.js build loaded successfully');"
      
      - name: Test browser build imports
        run: |
          node -e "try { require('./dist/clustering.browser.js'); console.log('Browser CommonJS build loaded'); } catch(e) { console.log('Browser build requires browser environment (expected)'); }"
      
      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info